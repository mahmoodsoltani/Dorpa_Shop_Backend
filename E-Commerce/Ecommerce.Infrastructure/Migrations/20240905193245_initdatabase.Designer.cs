// <auto-generated />
using System;
using Ecommerce.Infrastructure.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ecommerce.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240905193245_initdatabase")]
    partial class initdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Model.src.Entity.OrderAggregate.CartDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_cart_details");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_cart_details_product_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_cart_details_user_id");

                    b.ToTable("cart_details", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.OrderAggregate.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric")
                        .HasColumnName("discount");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric")
                        .HasColumnName("total");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.OrderAggregate.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric")
                        .HasColumnName("discount");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_order_details");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_details_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_details_product_id");

                    b.ToTable("order_details", null, t =>
                        {
                            t.HasCheckConstraint("CK_OrderDetail_Price_AboveZero", "price > 0");

                            t.HasCheckConstraint("CK_OrderDetail_Quantity_Positive", "quantity > 0");
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .HasColumnType("text")
                        .HasColumnName("alt_text");

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_brands");

                    b.ToTable("brands", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltText = "Trek logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7010),
                            Description = "Trek is a leading bicycle manufacturer known for its high-performance bikes and innovative designs.",
                            ImageUrl = "https://example.com/trek.jpg",
                            Name = "Trek",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7011)
                        },
                        new
                        {
                            Id = 2,
                            AltText = "Specialized logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7019),
                            Description = "Specialized offers a wide range of bikes for different riding styles and disciplines.",
                            ImageUrl = "https://example.com/specialized.jpg",
                            Name = "Specialized",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7020)
                        },
                        new
                        {
                            Id = 3,
                            AltText = "Giant logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7022),
                            Description = "Giant is one of the largest bike manufacturers globally, known for producing reliable and affordable bicycles.",
                            ImageUrl = "https://example.com/giant.jpg",
                            Name = "Giant",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7023)
                        },
                        new
                        {
                            Id = 4,
                            AltText = "Cannondale logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7025),
                            Description = "Cannondale is renowned for its innovation in bicycle technology and design.",
                            ImageUrl = "https://example.com/cannondale.jpg",
                            Name = "Cannondale",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7025)
                        },
                        new
                        {
                            Id = 5,
                            AltText = "Bianchi logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7027),
                            Description = "Bianchi is an Italian brand with a long history of producing high-quality road bikes and racing bicycles.",
                            ImageUrl = "https://example.com/bianchi.jpg",
                            Name = "Bianchi",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7028)
                        },
                        new
                        {
                            Id = 6,
                            AltText = "Scott logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7032),
                            Description = "Scott Sports is known for its range of high-performance bicycles and cycling gear.",
                            ImageUrl = "https://example.com/scott.jpg",
                            Name = "Scott",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7032)
                        },
                        new
                        {
                            Id = 7,
                            AltText = "Santa Cruz logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7034),
                            Description = "Santa Cruz specializes in high-end mountain bikes with a focus on innovation and performance.",
                            ImageUrl = "https://example.com/santacruz.jpg",
                            Name = "Santa Cruz",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7035)
                        },
                        new
                        {
                            Id = 8,
                            AltText = "Norco logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7037),
                            Description = "Norco is a Canadian brand known for its mountain bikes and cycling products.",
                            ImageUrl = "https://example.com/norco.jpg",
                            Name = "Norco",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7038)
                        },
                        new
                        {
                            Id = 9,
                            AltText = "Cube logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7040),
                            Description = "Cube offers a wide range of bicycles, including road, mountain, and e-bikes.",
                            ImageUrl = "https://example.com/cube.jpg",
                            Name = "Cube",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7040)
                        },
                        new
                        {
                            Id = 10,
                            AltText = "Raleigh logo",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7043),
                            Description = "Raleigh is a historic brand offering a diverse range of bicycles.",
                            ImageUrl = "https://example.com/raleigh.jpg",
                            Name = "Raleigh",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7044)
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_categories_parent_id");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6767),
                            Description = "All types of bicycles",
                            Name = "Bicycles",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6767)
                        },
                        new
                        {
                            Id = 2,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6772),
                            Description = "Off-road bikes",
                            Name = "Mountain Bikes",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6772)
                        },
                        new
                        {
                            Id = 3,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6775),
                            Description = "XC mountain bikes",
                            Name = "Cross-Country (XC)",
                            ParentId = 2,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6775)
                        },
                        new
                        {
                            Id = 4,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6778),
                            Description = "Hardtail cross-country mountain bikes",
                            Name = "Hardtail XC",
                            ParentId = 3,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6778)
                        },
                        new
                        {
                            Id = 5,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6780),
                            Description = "Full-suspension cross-country mountain bikes",
                            Name = "Full-Suspension XC",
                            ParentId = 3,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6781)
                        },
                        new
                        {
                            Id = 6,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6784),
                            Description = "Trail bikes for rugged terrain",
                            Name = "Trail Bikes",
                            ParentId = 2,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6785)
                        },
                        new
                        {
                            Id = 7,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6787),
                            Description = "Downhill mountain bikes",
                            Name = "Downhill Bikes",
                            ParentId = 2,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6787)
                        },
                        new
                        {
                            Id = 8,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6790),
                            Description = "Enduro mountain bikes",
                            Name = "Enduro Bikes",
                            ParentId = 2,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6790)
                        },
                        new
                        {
                            Id = 9,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6792),
                            Description = "Lightweight bikes for paved roads",
                            Name = "Road Bikes",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6793)
                        },
                        new
                        {
                            Id = 10,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6796),
                            Description = "Bikes for racing",
                            Name = "Race Bikes",
                            ParentId = 9,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6797)
                        },
                        new
                        {
                            Id = 11,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6799),
                            Description = "Lightweight carbon frame race bikes",
                            Name = "Carbon Frame Race Bikes",
                            ParentId = 10,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6799)
                        },
                        new
                        {
                            Id = 12,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6801),
                            Description = "Comfort-oriented road bikes",
                            Name = "Endurance Bikes",
                            ParentId = 9,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6802)
                        },
                        new
                        {
                            Id = 13,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6804),
                            Description = "Aerodynamic bikes for speed",
                            Name = "Aero Bikes",
                            ParentId = 9,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6805)
                        },
                        new
                        {
                            Id = 14,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6807),
                            Description = "Versatile bikes for various terrains",
                            Name = "Hybrid Bikes",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6807)
                        },
                        new
                        {
                            Id = 15,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6809),
                            Description = "Hybrid bikes suited for urban environments",
                            Name = "Urban Hybrid Bikes",
                            ParentId = 14,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6810)
                        },
                        new
                        {
                            Id = 16,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6812),
                            Description = "Hybrid bikes designed for fitness",
                            Name = "Fitness Bikes",
                            ParentId = 14,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6813)
                        },
                        new
                        {
                            Id = 17,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6815),
                            Description = "Bikes with electric assistance",
                            Name = "Electric Bikes",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6816)
                        },
                        new
                        {
                            Id = 18,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6819),
                            Description = "Electric bikes for mountain terrain",
                            Name = "E-Mountain Bikes",
                            ParentId = 17,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6819)
                        },
                        new
                        {
                            Id = 19,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6822),
                            Description = "Electric road bikes",
                            Name = "E-Road Bikes",
                            ParentId = 17,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6822)
                        },
                        new
                        {
                            Id = 20,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6825),
                            Description = "Electric hybrid bikes",
                            Name = "E-Hybrid Bikes",
                            ParentId = 17,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6825)
                        },
                        new
                        {
                            Id = 21,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6828),
                            Description = "Bicycles designed for children",
                            Name = "Kids' Bikes",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6828)
                        },
                        new
                        {
                            Id = 22,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6830),
                            Description = "Bikes for toddlers to learn balance",
                            Name = "Balance Bikes",
                            ParentId = 21,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6831)
                        },
                        new
                        {
                            Id = 23,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6833),
                            Description = "Traditional pedal bikes for kids",
                            Name = "Pedal Bikes",
                            ParentId = 21,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6833)
                        },
                        new
                        {
                            Id = 24,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6836),
                            Description = "Mountain bikes designed for kids",
                            Name = "Mountain Kids Bikes",
                            ParentId = 21,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6836)
                        },
                        new
                        {
                            Id = 25,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6838),
                            Description = "Bicycles and accessories for men",
                            Name = "Men",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6839)
                        },
                        new
                        {
                            Id = 26,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6841),
                            Description = "Bicycles and accessories for women",
                            Name = "Women",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6841)
                        },
                        new
                        {
                            Id = 27,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6843),
                            Description = "Bicycles and accessories for children",
                            Name = "Children",
                            ParentId = 1,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6844)
                        },
                        new
                        {
                            Id = 28,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6846),
                            Description = "Bike accessories",
                            Name = "Accessories",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6846)
                        },
                        new
                        {
                            Id = 29,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6849),
                            Description = "Safety helmets",
                            Name = "Helmets",
                            ParentId = 28,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6849)
                        },
                        new
                        {
                            Id = 30,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6851),
                            Description = "Bike lights",
                            Name = "Lights",
                            ParentId = 28,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6852)
                        },
                        new
                        {
                            Id = 31,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6854),
                            Description = "Bike locks",
                            Name = "Locks",
                            ParentId = 28,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6854)
                        },
                        new
                        {
                            Id = 32,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6857),
                            Description = "Bike bags and carriers",
                            Name = "Bags",
                            ParentId = 28,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6857)
                        },
                        new
                        {
                            Id = 33,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6859),
                            Description = "Bike parts",
                            Name = "Parts",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6860)
                        },
                        new
                        {
                            Id = 34,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6863),
                            Description = "Drivetrain components",
                            Name = "Drivetrain",
                            ParentId = 33,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6863)
                        },
                        new
                        {
                            Id = 35,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6865),
                            Description = "Brakes and braking components",
                            Name = "Brakes",
                            ParentId = 33,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6866)
                        },
                        new
                        {
                            Id = 36,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6918),
                            Description = "Wheels and rims",
                            Name = "Wheels",
                            ParentId = 33,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6919)
                        },
                        new
                        {
                            Id = 37,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6921),
                            Description = "Bike tires",
                            Name = "Tires",
                            ParentId = 33,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6922)
                        },
                        new
                        {
                            Id = 38,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6924),
                            Description = "Handlebars and grips",
                            Name = "Handlebars",
                            ParentId = 33,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6924)
                        },
                        new
                        {
                            Id = 39,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6926),
                            Description = "Cycling clothing",
                            Name = "Clothing",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6927)
                        },
                        new
                        {
                            Id = 40,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6929),
                            Description = "Cycling jerseys",
                            Name = "Jerseys",
                            ParentId = 39,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6929)
                        },
                        new
                        {
                            Id = 41,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6932),
                            Description = "Cycling shorts",
                            Name = "Shorts",
                            ParentId = 39,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6932)
                        },
                        new
                        {
                            Id = 42,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6934),
                            Description = "Cycling gloves",
                            Name = "Gloves",
                            ParentId = 39,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6935)
                        },
                        new
                        {
                            Id = 43,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6937),
                            Description = "Cycling jackets",
                            Name = "Jackets",
                            ParentId = 39,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6938)
                        },
                        new
                        {
                            Id = 44,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6940),
                            Description = "Cycling socks",
                            Name = "Socks",
                            ParentId = 39,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6940)
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_colors");

                    b.ToTable("colors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "#FF0000",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6439),
                            Name = "Red",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6439)
                        },
                        new
                        {
                            Id = 2,
                            Code = "#00FF00",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6444),
                            Name = "Green",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6445)
                        },
                        new
                        {
                            Id = 3,
                            Code = "#0000FF",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6447),
                            Name = "Blue",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6447)
                        },
                        new
                        {
                            Id = 4,
                            Code = "#FFFF00",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6450),
                            Name = "Yellow",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6450)
                        },
                        new
                        {
                            Id = 5,
                            Code = "#00FFFF",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6452),
                            Name = "Cyan",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6453)
                        },
                        new
                        {
                            Id = 6,
                            Code = "#FF00FF",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6459),
                            Name = "Magenta",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6459)
                        },
                        new
                        {
                            Id = 7,
                            Code = "#000000",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6538),
                            Name = "Black",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6539)
                        },
                        new
                        {
                            Id = 8,
                            Code = "#FFFFFF",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6541),
                            Name = "White",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6542)
                        },
                        new
                        {
                            Id = 9,
                            Code = "#808080",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6544),
                            Name = "Gray",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6544)
                        },
                        new
                        {
                            Id = 10,
                            Code = "#800000",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6547),
                            Name = "Maroon",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6547)
                        },
                        new
                        {
                            Id = 11,
                            Code = "#808000",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6549),
                            Name = "Olive",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6550)
                        },
                        new
                        {
                            Id = 12,
                            Code = "#800080",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6552),
                            Name = "Purple",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6552)
                        },
                        new
                        {
                            Id = 13,
                            Code = "#C0C0C0",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6554),
                            Name = "Silver",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6555)
                        },
                        new
                        {
                            Id = 14,
                            Code = "#008080",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6557),
                            Name = "Teal",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6557)
                        },
                        new
                        {
                            Id = 15,
                            Code = "#000080",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6559),
                            Name = "Navy",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6560)
                        },
                        new
                        {
                            Id = 16,
                            Code = "#00FF00",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6562),
                            Name = "Lime",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6562)
                        },
                        new
                        {
                            Id = 17,
                            Code = "#00FFFF",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6564),
                            Name = "Aqua",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6564)
                        },
                        new
                        {
                            Id = 18,
                            Code = "#FF00FF",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6568),
                            Name = "Fuchsia",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6569)
                        },
                        new
                        {
                            Id = 19,
                            Code = "#FFA500",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6571),
                            Name = "Orange",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6571)
                        },
                        new
                        {
                            Id = 20,
                            Code = "#A52A2A",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6573),
                            Name = "Brown",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6574)
                        },
                        new
                        {
                            Id = 21,
                            Code = "#FFC0CB",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6576),
                            Name = "Pink",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6576)
                        },
                        new
                        {
                            Id = 22,
                            Code = "#4B0082",
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6578),
                            Name = "Indigo",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6579)
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("discount_percentage");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_date");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_discounts");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_discounts_product_id");

                    b.ToTable("discounts", null, t =>
                        {
                            t.HasCheckConstraint("CK_Discount_Date", "start_Date < end_Date");
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnName("brand_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<int?>("ColorId")
                        .HasColumnType("integer")
                        .HasColumnName("color_id");

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int?>("SizeId")
                        .HasColumnType("integer")
                        .HasColumnName("size_id");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("stock")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("BrandId")
                        .HasDatabaseName("ix_products_brand_id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.HasIndex("ColorId")
                        .HasDatabaseName("ix_products_color_id");

                    b.HasIndex("SizeId")
                        .HasDatabaseName("ix_products_size_id");

                    b.ToTable("products", null, t =>
                        {
                            t.HasCheckConstraint("CK_Product_Price_AboveZero", "price> 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            ColorId = 1,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7091),
                            Description = "High-performance mountain bike with advanced suspension.",
                            Name = "Mountain Bike X1",
                            Price = 1200.00m,
                            SizeId = 1,
                            Stock = 10,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7091)
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 2,
                            ColorId = 2,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7098),
                            Description = "Lightweight road bike designed for speed and efficiency.",
                            Name = "Road Bike Pro",
                            Price = 1500.00m,
                            SizeId = 2,
                            Stock = 5,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7099)
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryId = 3,
                            ColorId = 3,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7102),
                            Description = "Versatile hybrid bike for both urban and off-road adventures.",
                            Name = "Hybrid Bike ZX",
                            Price = 900.00m,
                            SizeId = 3,
                            Stock = 7,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7102)
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            CategoryId = 4,
                            ColorId = 4,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7106),
                            Description = "Electric bike with long battery life and powerful motor.",
                            Name = "Electric Bike E1",
                            Price = 2000.00m,
                            SizeId = 1,
                            Stock = 3,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7106)
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            CategoryId = 5,
                            ColorId = 5,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7110),
                            Description = "Comfortable touring bike with ample storage and stability.",
                            Name = "Touring Bike Expert",
                            Price = 1100.00m,
                            SizeId = 2,
                            Stock = 6,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7110)
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            CategoryId = 6,
                            ColorId = 6,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7115),
                            Description = "Colorful and durable bike designed for children.",
                            Name = "Kids Bike Fun",
                            Price = 300.00m,
                            SizeId = 4,
                            Stock = 12,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7115)
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 7,
                            CategoryId = 7,
                            ColorId = 7,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7118),
                            Description = "Comfortable bike for city commuting and leisure rides.",
                            Name = "Comfort Bike C1",
                            Price = 800.00m,
                            SizeId = 3,
                            Stock = 8,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7119)
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 8,
                            CategoryId = 8,
                            ColorId = 8,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7122),
                            Description = "Compact foldable bike ideal for urban environments.",
                            Name = "Foldable Bike X2",
                            Price = 700.00m,
                            SizeId = 3,
                            Stock = 9,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7123)
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 9,
                            CategoryId = 2,
                            ColorId = 9,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7126),
                            Description = "High-speed racing bike with aerodynamic design.",
                            Name = "Racing Bike S1",
                            Price = 1800.00m,
                            SizeId = 2,
                            Stock = 4,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7127)
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 10,
                            CategoryId = 1,
                            ColorId = 10,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7131),
                            Description = "Durable mountain bike with enhanced shock absorbers.",
                            Name = "Mountain Bike Y2",
                            Price = 1300.00m,
                            SizeId = 1,
                            Stock = 7,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7132)
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 4,
                            CategoryId = 4,
                            ColorId = 1,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7135),
                            Description = "Electric scooter with compact design and fast charging.",
                            Name = "Electric Scooter E2",
                            Price = 600.00m,
                            SizeId = 3,
                            Stock = 15,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7136)
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 6,
                            CategoryId = 7,
                            ColorId = 2,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7139),
                            Description = "Stylish cruiser bike with comfortable seating.",
                            Name = "Cruiser Bike C2",
                            Price = 950.00m,
                            SizeId = 2,
                            Stock = 6,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7139)
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 7,
                            CategoryId = 6,
                            ColorId = 3,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7143),
                            Description = "Durable bike for kids with adjustable seat.",
                            Name = "Kids Bike X3",
                            Price = 350.00m,
                            SizeId = 4,
                            Stock = 20,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7143)
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 8,
                            CategoryId = 3,
                            ColorId = 4,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7147),
                            Description = "Hybrid bike suitable for both road and trail riding.",
                            Name = "Hybrid Bike Z3",
                            Price = 1000.00m,
                            SizeId = 1,
                            Stock = 9,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7147)
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 9,
                            CategoryId = 5,
                            ColorId = 5,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7150),
                            Description = "High-comfort touring bike with multiple gears.",
                            Name = "Touring Bike T1",
                            Price = 1200.00m,
                            SizeId = 2,
                            Stock = 5,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7151)
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 10,
                            CategoryId = 2,
                            ColorId = 6,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7154),
                            Description = "High-performance bike designed for speed enthusiasts.",
                            Name = "Performance Bike P1",
                            Price = 1500.00m,
                            SizeId = 2,
                            Stock = 8,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7155)
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 1,
                            CategoryId = 1,
                            ColorId = 7,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7158),
                            Description = "Advanced mountain bike with reinforced frame.",
                            Name = "Mountain Bike M2",
                            Price = 1400.00m,
                            SizeId = 1,
                            Stock = 4,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7159)
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 2,
                            CategoryId = 4,
                            ColorId = 8,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7164),
                            Description = "Powerful electric bike with extended range.",
                            Name = "Electric Bike E3",
                            Price = 2200.00m,
                            SizeId = 3,
                            Stock = 3,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7164)
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 3,
                            CategoryId = 2,
                            ColorId = 9,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7168),
                            Description = "Speed-oriented road bike with aerodynamic frame.",
                            Name = "Road Bike R2",
                            Price = 1700.00m,
                            SizeId = 2,
                            Stock = 6,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7168)
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 4,
                            CategoryId = 7,
                            ColorId = 10,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7172),
                            Description = "Classic cruiser bike with retro design.",
                            Name = "Cruiser Bike C3",
                            Price = 950.00m,
                            SizeId = 3,
                            Stock = 7,
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(7172)
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .HasColumnType("text")
                        .HasColumnName("alt_text");

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean")
                        .HasColumnName("is_primary");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_product_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_product_images_product_id");

                    b.ToTable("product_images", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_sizes");

                    b.ToTable("sizes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6660),
                            Name = "Small",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6661)
                        },
                        new
                        {
                            Id = 2,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6665),
                            Name = "Medium",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6665)
                        },
                        new
                        {
                            Id = 3,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6667),
                            Name = "Large",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6668)
                        },
                        new
                        {
                            Id = 4,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6670),
                            Name = "Extra Large",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6670)
                        },
                        new
                        {
                            Id = 5,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6672),
                            Name = "XXL",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6673)
                        },
                        new
                        {
                            Id = 6,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6676),
                            Name = "XS",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6676)
                        },
                        new
                        {
                            Id = 7,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6678),
                            Name = "XXS",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6679)
                        },
                        new
                        {
                            Id = 8,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6681),
                            Name = "One Size",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6681)
                        },
                        new
                        {
                            Id = 9,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6683),
                            Name = "Youth",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6683)
                        },
                        new
                        {
                            Id = 10,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6686),
                            Name = "Adult",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6687)
                        },
                        new
                        {
                            Id = 11,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6689),
                            Name = "Regular",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6689)
                        },
                        new
                        {
                            Id = 12,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6691),
                            Name = "Custom",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6691)
                        },
                        new
                        {
                            Id = 13,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6693),
                            Name = "Standard",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6694)
                        },
                        new
                        {
                            Id = 14,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6695),
                            Name = "Slim",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6696)
                        },
                        new
                        {
                            Id = 15,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6698),
                            Name = "Fit",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6698)
                        },
                        new
                        {
                            Id = 16,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6700),
                            Name = "Classic",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6701)
                        },
                        new
                        {
                            Id = 17,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6703),
                            Name = "Plus Size",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6703)
                        },
                        new
                        {
                            Id = 18,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6706),
                            Name = "Petite",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6706)
                        },
                        new
                        {
                            Id = 19,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6708),
                            Name = "Tall",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6709)
                        },
                        new
                        {
                            Id = 20,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6710),
                            Name = "Short",
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6711)
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_favourites");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_favourites_product_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_favourites_user_id");

                    b.ToTable("favourites", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("Rate")
                        .HasColumnType("integer")
                        .HasColumnName("rate");

                    b.Property<DateTime>("Review_Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("review_date");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_reviews_user_id");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("is_admin")
                        .HasDefaultValueSql("FALSE");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("FALSE");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("salt");

                    b.Property<DateTime>("Update_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6297),
                            Email = "mahmoud.soltani@gmail.com",
                            FirstName = "Mahmoud",
                            IsAdmin = true,
                            IsDeleted = false,
                            LastName = "Soltani",
                            Password = "25SvyWDSh0Nw1YYWLQWGq3KoLw0kiIFrP5PJYe1i2Uw=",
                            Salt = new byte[] { 53, 38, 7, 94, 193, 42, 228, 43, 105, 161, 180, 46, 43, 193, 42, 58 },
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6300)
                        },
                        new
                        {
                            Id = 2,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6317),
                            Email = "John@gmail.com",
                            FirstName = "John",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Doe",
                            Password = "25SvyWDSh0Nw1YYWLQWGq3KoLw0kiIFrP5PJYe1i2Uw=",
                            Salt = new byte[] { 53, 38, 7, 94, 193, 42, 228, 43, 105, 161, 180, 46, 43, 193, 42, 58 },
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6318)
                        },
                        new
                        {
                            Id = 3,
                            Create_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6320),
                            Email = "mike@gmail.com",
                            FirstName = "Mike",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Smite",
                            Password = "25SvyWDSh0Nw1YYWLQWGq3KoLw0kiIFrP5PJYe1i2Uw=",
                            Salt = new byte[] { 53, 38, 7, 94, 193, 42, 228, 43, 105, 161, 180, 46, 43, 193, 42, 58 },
                            Update_Date = new DateTime(2024, 9, 5, 19, 32, 43, 219, DateTimeKind.Utc).AddTicks(6320)
                        });
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.OrderAggregate.CartDetail", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Product", "Product")
                        .WithMany("CartDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cart_details_products_product_id");

                    b.HasOne("Ecommerce.Model.src.Entity.UserAggregate.User", "User")
                        .WithMany("CartDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cart_details_users_user_id");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.OrderAggregate.Order", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.UserAggregate.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.OrderAggregate.OrderDetail", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.OrderAggregate.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_details_orders_order_id");

                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_details_products_product_id");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Category", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_categories_categories_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Discount", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Product", "Product")
                        .WithOne("Discount")
                        .HasForeignKey("Ecommerce.Model.src.Entity.ProductAggregate.Discount", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_discounts_products_product_id");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Product", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .HasConstraintName("fk_products_brands_brand_id");

                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_products_categories_category_id");

                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .HasConstraintName("fk_products_colors_color_id");

                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .HasConstraintName("fk_products_sizes_size_id");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.ProductImage", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_images_products_product_id");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.Address", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.UserAggregate.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.Favourite", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_favourites_products_product_id");

                    b.HasOne("Ecommerce.Model.src.Entity.UserAggregate.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_favourites_users_user_id");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.Review", b =>
                {
                    b.HasOne("Ecommerce.Model.src.Entity.ProductAggregate.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("Ecommerce.Model.src.Entity.UserAggregate.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.OrderAggregate.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.ProductAggregate.Product", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("Discount");

                    b.Navigation("ProductImages");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Ecommerce.Model.src.Entity.UserAggregate.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("CartDetails");

                    b.Navigation("Favourites");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
